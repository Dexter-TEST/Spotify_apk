package p.kf0;
import p.fv1;
import p.dv0;
import java.util.LinkedHashMap;
import java.lang.String;
import java.lang.Object;

public final class kf0	// class@001bfd from classes.dex
{
    public final String a;
    public static final fv1 b;
    public static final dv0 c;
    public static final LinkedHashMap d;
    public static final kf0 e;
    public static final kf0 f;
    public static final kf0 g;
    public static final kf0 h;
    public static final kf0 i;
    public static final kf0 j;
    public static final kf0 k;
    public static final kf0 l;
    public static final kf0 m;
    public static final kf0 n;
    public static final kf0 o;
    public static final kf0 p;
    public static final kf0 q;
    public static final kf0 r;
    public static final kf0 s;
    public static final kf0 t;

    static {
       fv1 uofv1 = new fv1();
       kf0.b = uofv1;
       kf0.c = new dv0(17);
       kf0.d = new LinkedHashMap();
       fv1.m(uofv1, "SSL_RSA_WITH_NULL_MD5");
       fv1.m(uofv1, "SSL_RSA_WITH_NULL_SHA");
       fv1.m(uofv1, "SSL_RSA_EXPORT_WITH_RC4_40_MD5");
       fv1.m(uofv1, "SSL_RSA_WITH_RC4_128_MD5");
       fv1.m(uofv1, "SSL_RSA_WITH_RC4_128_SHA");
       fv1.m(uofv1, "SSL_RSA_EXPORT_WITH_DES40_CBC_SHA");
       fv1.m(uofv1, "SSL_RSA_WITH_DES_CBC_SHA");
       kf0.e = fv1.m(uofv1, "SSL_RSA_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_DSS_WITH_DES_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_RSA_WITH_DES_CBC_SHA");
       fv1.m(uofv1, "SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "SSL_DH_anon_EXPORT_WITH_RC4_40_MD5");
       fv1.m(uofv1, "SSL_DH_anon_WITH_RC4_128_MD5");
       fv1.m(uofv1, "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
       fv1.m(uofv1, "SSL_DH_anon_WITH_DES_CBC_SHA");
       fv1.m(uofv1, "SSL_DH_anon_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_KRB5_WITH_DES_CBC_SHA");
       fv1.m(uofv1, "TLS_KRB5_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_KRB5_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_KRB5_WITH_DES_CBC_MD5");
       fv1.m(uofv1, "TLS_KRB5_WITH_3DES_EDE_CBC_MD5");
       fv1.m(uofv1, "TLS_KRB5_WITH_RC4_128_MD5");
       fv1.m(uofv1, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA");
       fv1.m(uofv1, "TLS_KRB5_EXPORT_WITH_RC4_40_SHA");
       fv1.m(uofv1, "TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5");
       fv1.m(uofv1, "TLS_KRB5_EXPORT_WITH_RC4_40_MD5");
       kf0.f = fv1.m(uofv1, "TLS_RSA_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_128_CBC_SHA");
       kf0.g = fv1.m(uofv1, "TLS_RSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_RSA_WITH_NULL_SHA256");
       fv1.m(uofv1, "TLS_RSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_RSA_WITH_AES_256_CBC_SHA256");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_256_CBC_SHA256");
       fv1.m(uofv1, "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA");
       fv1.m(uofv1, "TLS_PSK_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_PSK_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_PSK_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_PSK_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_RSA_WITH_SEED_CBC_SHA");
       kf0.h = fv1.m(uofv1, "TLS_RSA_WITH_AES_128_GCM_SHA256");
       kf0.i = fv1.m(uofv1, "TLS_RSA_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256");
       fv1.m(uofv1, "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_128_GCM_SHA256");
       fv1.m(uofv1, "TLS_DH_anon_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_EMPTY_RENEGOTIATION_INFO_SCSV");
       fv1.m(uofv1, "TLS_FALLBACK_SCSV");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_NULL_SHA");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_NULL_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_NULL_SHA");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_NULL_SHA");
       fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA");
       kf0.j = fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA");
       kf0.k = fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_anon_WITH_NULL_SHA");
       fv1.m(uofv1, "TLS_ECDH_anon_WITH_RC4_128_SHA");
       fv1.m(uofv1, "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_anon_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDH_anon_WITH_AES_256_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384");
       fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384");
       kf0.l = fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256");
       kf0.m = fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256");
       fv1.m(uofv1, "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384");
       kf0.n = fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256");
       kf0.o = fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256");
       fv1.m(uofv1, "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384");
       fv1.m(uofv1, "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA");
       fv1.m(uofv1, "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA");
       kf0.p = fv1.m(uofv1, "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
       kf0.q = fv1.m(uofv1, "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256");
       fv1.m(uofv1, "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
       fv1.m(uofv1, "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256");
       kf0.r = fv1.m(uofv1, "TLS_AES_128_GCM_SHA256");
       kf0.s = fv1.m(uofv1, "TLS_AES_256_GCM_SHA384");
       kf0.t = fv1.m(uofv1, "TLS_CHACHA20_POLY1305_SHA256");
       fv1.m(uofv1, "TLS_AES_128_CCM_SHA256");
       fv1.m(uofv1, "TLS_AES_128_CCM_8_SHA256");
    }
    public void kf0(String p0){
       super();
       this.a = p0;
    }
    public final String toString(){
       return this.a;
    }
}
